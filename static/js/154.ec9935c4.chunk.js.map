{"version":3,"file":"static/js/154.ec9935c4.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/AddContact/addContact.module.css?4a48","redux/selector.js","components/AddContact/AddContact.js","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/contacts.module.css?1e09","webpack://goit-react-hw-08-phonebook/./src/components/Notification/Notification.module.css?a91f","components/Notification/Notification.js","components/Contacts/Contacts.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/filter.module.css?e01c","components/Filter/Filter.js","pages/MainPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main_title\":\"addContact_main_title__ISaX-\",\"form\":\"addContact_form__-QRua\",\"name_input\":\"addContact_name_input__2C3N3\",\"add_btn\":\"addContact_add_btn__EqwQM\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter.value;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredcontacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import css from './addContact.module.css';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from 'redux/operations';\nimport { selectContacts } from 'redux/selector';\nimport { useId } from 'react';\n\nconst AddContact = () => {\n  const contacts = useSelector(selectContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const handleFormChange = e => {\n    e.target.name === 'name' && setName(e.target.value);\n    e.target.name === 'number' && setNumber(e.target.value);\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const exist = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (exist) {\n      alert(`${name} is already in contacts`);\n      return;\n    } else {\n      dispatch(\n        addContacts({\n          name: name,\n          number: number,\n        })\n      );\n    }\n    setName('');\n    setNumber('');\n  };\n\n  const idName = useId();\n  const idNumber = useId();\n\n  return (\n    <div>\n      <form className={css.form} onSubmit={handleFormSubmit}>\n        <label htmlFor={idName}>\n          <h1 className={css.main_title}>Name</h1>\n          <input\n            className={css.name_input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            id={idName}\n            onChange={handleFormChange}\n            pattern=\"^[A-Za-z\\u0080-\\uFFFF ']+$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. \n                          For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label htmlFor={idNumber}>\n          <h1 className={css.main_title}>Number</h1>\n          <input\n            className={css.name_input}\n            type=\"text\"\n            name=\"number\"\n            value={number}\n            onChange={handleFormChange}\n            id={idNumber}\n            pattern=\"^(\\+?[0-9.\\(\\)\\-\\s]*)$\"\n            title=\"number number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button type=\"submit\" className={css.add_btn}>\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddContact;\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"contacts_main__H2WAR\",\"title\":\"contacts_title__ryyzt\",\"list\":\"contacts_list__QBWBd\",\"list_item\":\"contacts_list_item__ScWpd\",\"delete_btn\":\"contacts_delete_btn__pdpZW\",\"App\":\"contacts_App__Izyu5\",\"App-header\":\"contacts_App-header__7E2pU\",\"App-link\":\"contacts_App-link__V-dsH\",\"main_title\":\"contacts_main_title__I2XAK\"};","// extracted by mini-css-extract-plugin\nexport default {\"notification\":\"Notification_notification__SfISU\"};","import css from './Notification.module.css';\n\nconst Notification = () => {\n  return (\n    <div>\n      <h1 className={css.notification}>You don't have any contacts yet!!!</h1>\n    </div>\n  );\n};\n\nexport default Notification;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilteredcontacts, selectFilter } from '..//../redux/selector';\nimport { deleteContacts } from '..//../redux/operations';\nimport css from './contacts.module.css';\nimport Notification from '../Notification/Notification';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectFilteredcontacts);\n  const filter = useSelector(selectFilter);\n  const handleDelete = e => {\n    dispatch(deleteContacts(e.target.value));\n  };\n\n  if (contacts.length > 0) {\n    return (\n      <div className={css.main}>\n        <ul className={css.list}>\n          {contacts\n            .filter(i => i.name.includes(filter))\n            .map(item => {\n              const { name, id, number } = item;\n              return (\n                <li className={css.list_item} key={id}>\n                  {name}: {number}\n                  <button\n                    type=\"button\"\n                    className={css.delete_btn}\n                    onClick={handleDelete}\n                  >\n                    Delete\n                  </button>\n                </li>\n              );\n            })}\n        </ul>\n      </div>\n    );\n  } else {\n    return <Notification />;\n  }\n};\n\nexport default Contacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"filter_container__8MH92\",\"container_form\":\"filter_container_form__aDPV4\",\"find_title\":\"filter_find_title__vblU4\",\"find_input\":\"filter_find_input__L9SKS\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fromfilter } from '..//../redux/filtr';\nimport css from './filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterData = e => {\n    dispatch(fromfilter(e.target.value));\n  };\n\n  return (\n    <div className={css.container}>\n      <h2 className={css.find_title}>Find contacts by name</h2>\n      <input\n        type=\"text\"\n        className={css.find_input}\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        onChange={filterData}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import AddContact from 'components/AddContact/AddContact';\nimport Contacts from '..//components/Contacts/Contacts';\nimport Filter from '..//components/Filter/Filter';\nimport Loader from 'components/Loader';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/operations';\nimport { selectError, selectIsLoading } from 'redux/selector';\nimport css from '../components/Contacts/contacts.module.css';\n\nfunction Phonebook() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <AddContact />\n      <h1 className={css.title}>Find contacts by name</h1>\n      <Filter />\n      {isLoading && !error && <Loader />}\n      <h1 className=\"main_title\">Contacts</h1>\n      <Contacts />\n    </div>\n  );\n}\n\nexport default Phonebook;\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","value","selectIsLoading","isLoading","selectError","error","selectFilteredcontacts","createSelector","contact","name","toLowerCase","includes","useSelector","useState","setName","number","setNumber","dispatch","useDispatch","handleFormChange","e","target","idName","useId","idNumber","className","css","onSubmit","preventDefault","find","alert","addContacts","htmlFor","type","id","onChange","pattern","title","required","handleDelete","deleteContacts","length","i","map","item","onClick","fromfilter","useEffect","fetchContacts","Loader"],"sourceRoot":""}